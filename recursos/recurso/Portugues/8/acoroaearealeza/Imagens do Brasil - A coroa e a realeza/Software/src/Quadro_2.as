package src{	import flash.display.MovieClip;	import flash.text.TextField;	import flash.events.MouseEvent;	import flash.events.Event;	import flash.display.SimpleButton;	import flash.accessibility.AccessibilityProperties;	import flash.text.Font;	import flash.text.TextFormat;	import flash.text.TextFieldAutoSize;	import flash.net.URLRequest;	import flash.net.URLLoader;	import flash.net.navigateToURL;	import src.*;	public class Quadro_2 extends MovieClip	{		public var numeroQuadro:Number = 2;		private var objetoPrincipal:Object;		var myFont:Font = new Candara();		var myFormat:TextFormat = new TextFormat();		var larguraFonte:Number;		var alturaFonte:Number;		var myTextField:TextField;				//var alturaTexto_1:Number;		//var alturaTexto_2:Number;		//var alturaTexto_3:Number;		//var alturaTexto_4:Number;		//var alturaTexto_5:Number;		//var alturaTexto_6:Number;		//var alturaTexto_7:Number;				var salvaFeed:String = "1";		public function Quadro_2 ():void		{			//garante que os objetos globais de Principal (como o vetor de caminha de imagem) estejam carregados, depois monta o swf.			addEventListener (Event.ADDED_TO_STAGE, iniciar);			//bot.addEventListener (MouseEvent.CLICK, botFunction);			//stage.addEventListener();			//stage.addEventListener(KeyboardEvent.KEY_UP, keyUpHandler2);			// Coloca a função para mostrar a janela de ajuda no botão do menu Ajuda			//sair_btn.addEventListener (MouseEvent.CLICK,sairFunction);			//creditos.addEventListener (MouseEvent.CLICK,abreJanela);			//ajuda.addEventListener (MouseEvent.CLICK,abreJanela);			//guia.addEventListener (MouseEvent.CLICK, clickGuia);			resp_0.addEventListener (MouseEvent.CLICK, clickResp);			resp_1.addEventListener (MouseEvent.CLICK, clickResp);			resp_2.addEventListener (MouseEvent.CLICK, clickResp);			resp_3.addEventListener (MouseEvent.CLICK, clickResp);			resp_4.addEventListener (MouseEvent.CLICK, clickResp);			resultado.refazer.addEventListener (MouseEvent.CLICK, refazerFC);			cor_0.visible = false;			cor_1.visible = false;			cor_2.visible = false;			cor_3.visible = false;			cor_4.visible = false;			resultado.visible = false;			bloker.visible = false;		}		function iniciar (evt:Event)		{			objetoPrincipal = parent.parent.parent;			objetoPrincipal.iniciaPosicoes ();			mostraTextos ();			objetoPrincipal.pulse.visible = false;			objetoPrincipal.proxima.addEventListener (MouseEvent.CLICK, objetoPrincipal.proximaFC);			objetoPrincipal.proxima.enabled = true;		}/*		function proximaFC (evt:MouseEvent)		{			trace (objetoPrincipal.numeroQuestao, objetoPrincipal.xmlEstrutura.vetQuestoes.length-1);			if (objetoPrincipal.numeroQuestao < objetoPrincipal.xmlEstrutura.vetQuestoes.length-1)			{				objetoPrincipal.numeroQuestao++;				reinicia ();			}			else			{				/*				resultado.textCorreta_0.text = transformaNumeroEmLetra(objetoPrincipal.xmlEstrutura.vetQuestoes[0].certa);				resultado.textCorreta_1.text = transformaNumeroEmLetra(objetoPrincipal.xmlEstrutura.vetQuestoes[1].certa);				resultado.textCorreta_2.text = transformaNumeroEmLetra(objetoPrincipal.xmlEstrutura.vetQuestoes[2].certa);				resultado.textCorreta_3.text = transformaNumeroEmLetra(objetoPrincipal.xmlEstrutura.vetQuestoes[3].certa);								resultado.text_0.text = objetoPrincipal.respUsuario[0];				resultado.text_1.text = objetoPrincipal.respUsuario[1];				resultado.text_2.text = objetoPrincipal.respUsuario[2];				resultado.text_3.text = objetoPrincipal.respUsuario[3];																resultado.visible = true;			}						//trace(objetoPrincipal.numeroQuestao, objetoPrincipal.xmlEstrutura.vetQuestoes.length);		}		*/		function transformaNumeroEmLetra (numero:Number):String		{			var valor:String;			switch (numero)			{				case 0 :					valor = "A";					break;				case 1 :					valor = "B";					break;				case 2 :					valor = "C";					break;				case 3 :					valor = "D";					break;				case 4 :					valor = "E";					break;			}			return valor;		}		function refazerFC (evt:MouseEvent)		{			objetoPrincipal.numeroQuestao = 0;			objetoPrincipal.respUsuario = ["-","-","-","-"];			reinicia ();			resultado.visible = false;		}		function reinicia ()		{			bloker.visible = false;			cor_0.visible = false;			cor_1.visible = false;			cor_2.visible = false;			cor_3.visible = false;			cor_4.visible = false;			removeObjetoPeloNomeLocal ("texto_marcador_1");			removeObjetoPeloNomeLocal ("texto_marcador_2");			removeObjetoPeloNomeLocal ("texto_marcador_3");			removeObjetoPeloNomeLocal ("texto_marcador_4");			removeObjetoPeloNomeLocal ("texto_marcador_5");			removeObjetoPeloNomeLocal ("texto_marcador_6");			removeObjetoPeloNomeLocal ("texto_marcador_7");			mostraTextos ();		}		function clickResp (evt:MouseEvent)		{			if (Number(objetoPrincipal.xmlEstrutura.vetQuestoes[objetoPrincipal.numeroQuestao].certa) == Number(evt.target.name.slice(5)))			{				this["cor_" + String(evt.target.name.slice(5))].gotoAndStop (1);			}			else			{				this["cor_" + String(evt.target.name.slice(5))].gotoAndStop (2);			}			bloker.visible = true;			objetoPrincipal.pulse.gotoAndPlay (1);			objetoPrincipal.pulse.visible = true;			removeObjetoPeloNomeLocal ("texto_marcador_7");			objetoPrincipal.respUsuario[objetoPrincipal.numeroQuestao] = transformaNumeroEmLetra(evt.target.name.slice(5));			feed_mc.play ();			this["cor_" + String(evt.target.name.slice(5))].visible = true;			salvaFeed = String(evt.target.name.slice(5));			montaSubTitulo (objetoPrincipal.xmlEstrutura.vetQuestoes[objetoPrincipal.numeroQuestao]["feedBack"+salvaFeed], 620, 60, marcador_7, 20);			//trace (objetoPrincipal.xmlEstrutura.vetQuestoes[objetoPrincipal.numeroQuestao].certa, evt.target.name.slice(5));		}		function mostraTextos ()		{			for (var i = 1;i<=6 ;i++)			{				removeObjetoPeloNomeLocal("texto_marcador_"+String(i));			}									montaSubTitulo (objetoPrincipal.xmlEstrutura.vetQuestoes[objetoPrincipal.numeroQuestao].enunciado, 620, 100, marcador_1, 30);			montaSubTitulo (objetoPrincipal.xmlEstrutura.vetQuestoes[objetoPrincipal.numeroQuestao].alternativa1, 620, 50, marcador_2, 20);			montaSubTitulo (objetoPrincipal.xmlEstrutura.vetQuestoes[objetoPrincipal.numeroQuestao].alternativa2, 620, 50, marcador_3, 20);			montaSubTitulo (objetoPrincipal.xmlEstrutura.vetQuestoes[objetoPrincipal.numeroQuestao].alternativa3, 620, 50, marcador_4, 20);			montaSubTitulo (objetoPrincipal.xmlEstrutura.vetQuestoes[objetoPrincipal.numeroQuestao].alternativa4, 620, 50, marcador_5, 20);			montaSubTitulo (objetoPrincipal.xmlEstrutura.vetQuestoes[objetoPrincipal.numeroQuestao].alternativa5, 620, 50, marcador_6, 20);		}				function montaSubTitulo (txt:String, largura:Number, altura:Number, marcador:Object, fontSize:Number)		{			formatText (achaTamanhoFonteAltura(txt, largura, altura-10, fontSize));						//trace(achaTamanhoFonteAltura(txt, largura, altura, fontSize));			myTextField = new TextField();			//myTextField.autoSize = TextFieldAutoSize.CENTER;			myTextField.defaultTextFormat = myFormat;			//myTextField.embedFonts = true;			myTextField.htmlText = objetoPrincipal.acertaTags(txt);			//myTextField.text = "";			//myTextField.background = true;			myTextField.height = altura;			myTextField.width = largura;			myTextField.multiline = true;			myTextField.wordWrap = true;			myTextField.x = marcador.x;			myTextField.y = marcador.y;			myTextField.name = "texto_" + marcador.name;			myTextField.selectable = false;									//bot.y = marcador_1.y + myTextField.height + (((330 - myTextField.height) - bot.height)/2);			addChildAt (myTextField, getChildIndex(getChildByName(marcador.name)));						//var nMarcador:String = marcador.name.slice(9);			//this["alturaTexto_"+nMarcador] = myTextField.numLines;						//trace (this["alturaTexto_"+nMarcador]);						//trace (myTextField.name);		}		function achaTamanhoFonteAltura (txt:String, larguraTexto:Number, altura:Number, fonteInicial:Number):Number		{			var tamanhoGrande:Boolean = true;			var valorTamanhoFonte:Number = fonteInicial;			while (tamanhoGrande == true)			{				formatText (valorTamanhoFonte);				var tfTesteTamanho:TextField = new TextField();				tfTesteTamanho.autoSize = TextFieldAutoSize.CENTER;				tfTesteTamanho.defaultTextFormat = myFormat;				tfTesteTamanho.embedFonts = true;				tfTesteTamanho.text = txt;				tfTesteTamanho.width = larguraTexto;				tfTesteTamanho.multiline = true;				tfTesteTamanho.wordWrap = true;				if (tfTesteTamanho.height > altura)				{					valorTamanhoFonte--;				}				else				{					tamanhoGrande = false;				}			}			alturaFonte = tfTesteTamanho.height;			//trace (alturaFonte, valorTamanhoFonte);			return valorTamanhoFonte;		}		function formatText (tamanho:Number)		{			myFormat.font = myFont.fontName;			myFormat.size = tamanho;			myFormat.align = "center";			myFormat.color = 0x333333;		}		function removeObjetoPeloNomeLocal (nome:String)		{			//verifica se objeto existe e se sim, o remove.			if (getChildByName(nome) != null)			{				removeChild (getChildByName(nome));			}		}		function botFunction (evt:MouseEvent)		{			objetoPrincipal.aparece (2);		}		function clickGuia (evt:MouseEvent)		{			var path:URLRequest;			var caminhoString:String = objetoPrincipal.xmlSWF.vetCaminho[objetoPrincipal.xmlSWF.vetCaminho.length - 3];			//trace (objetoPrincipal.xmlSWF.vetCaminho[objetoPrincipal.xmlSWF.vetCaminho.length-3]);			path = new URLRequest(caminhoString);			path.url = caminhoString;			navigateToURL (path);		}		function abreJanela (evt:MouseEvent)		{			var nome:String;			nome = evt.target.name;			//objetoPrincipal.mostraJanela (nome);			objetoPrincipal.quadroAtual = numeroQuadro;			if (nome == "creditos")			{				objetoPrincipal.aparece (objetoPrincipal.xmlSWF.vetCaminho.length-1);			}			else			{				objetoPrincipal.aparece (objetoPrincipal.xmlSWF.vetCaminho.length);			}		}		function sairFunction (evt:MouseEvent)		{			objetoPrincipal.sair ();		}	}}